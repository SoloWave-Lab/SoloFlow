import { type RouteConfig, index, route } from "@react-router/dev/routes";

export default [
  route("/", "routes/landing.tsx"),
  route("/marketplace", "routes/marketplace.tsx"),
  route("/marketplace/browse", "routes/marketplace.browse.tsx"),
  route("/marketplace/become-seller", "routes/marketplace.become-seller.tsx"),
  route("/marketplace/categories", "routes/marketplace.categories.tsx"),
  route("/marketplace/categories/:slug", "routes/marketplace.categories.$slug.tsx"),
  route("/marketplace/featured", "routes/marketplace.featured.tsx"),
  route("/marketplace/sellers", "routes/marketplace.sellers.tsx"),
  route("/marketplace/sellers/:id", "routes/marketplace.sellers.$id.tsx"),
  route("/marketplace/listings/:id", "routes/marketplace.listings.$id.tsx"),
  route("/marketplace/cart", "routes/marketplace.cart.tsx"),
  route("/marketplace/orders", "routes/marketplace.orders.tsx"),
  route("/marketplace/purchases", "routes/marketplace.purchases.tsx"),
  route("/marketplace/wishlist", "routes/marketplace.wishlist.tsx"),
  route("/marketplace/messages", "routes/marketplace.messages.tsx"),
  route("/marketplace/subscriptions", "routes/marketplace.subscriptions.tsx"),
  route("/marketplace/payment/success", "routes/marketplace.payment.success.tsx"),
  route("/marketplace/payment/failure", "routes/marketplace.payment.failure.tsx"),
  route("/marketplace/seller/dashboard", "routes/marketplace.seller.dashboard.tsx"),
  route("/marketplace/seller/analytics", "routes/marketplace.seller.analytics.tsx"),
  route("/marketplace/seller/listings", "routes/marketplace.seller.listings.tsx"),
  route("/marketplace/seller/listings/new", "routes/marketplace.seller.listings.new.tsx"),
  route("/marketplace/seller/listings/:id/edit", "routes/marketplace.seller.listings.$id.edit.tsx"),
  route("/marketplace/admin", "routes/marketplace.admin.tsx"),
  route("/marketplace/admin/analytics", "routes/marketplace.admin.analytics.tsx"),
  route("/marketplace/admin/moderation", "routes/marketplace.admin.moderation.tsx"),
  route("/login", "routes/login.tsx"),
  route("/projects", "routes/projects.tsx"),
  route("/profile", "routes/profile.tsx"),
  route("/project/:id", "routes/project.$id.tsx", [
    index("components/timeline/MediaBin.tsx"),
    route("text-editor", "components/media/TextEditor.tsx"),
    route("media-bin", "components/timeline/MediaBinPage.tsx"),
    route("transitions", "components/media/Transitions.tsx"),
    route("effects", "components/media/EffectsPage.tsx"),
  ]),
  route("/api/auth/*", "routes/api.auth.$.tsx"),
  route("/api/projects/*", "routes/api.projects.$.tsx"),
  route("/api/assets/*", "routes/api.assets.$.tsx"),
  route("/api/storage/*", "routes/api.storage.$.tsx"),
  route("/api/ai", "routes/api.ai.tsx"),
  route("/api/ai/generate-image", "routes/api.ai.generate-image.tsx"),
  route("/api/ai/generate-video", "routes/api.ai.generate-video.tsx"),
  route("/api/media/download", "routes/api.media.download.tsx"),
  route("/api/media/unsplash/search", "routes/api.media.unsplash.search.tsx"),
  route("/api/media/spotify/search", "routes/api.media.spotify.search.tsx"),
  route("/learn", "routes/learn.tsx"),
  route("/roadmap", "routes/roadmap.tsx"),
  route("/privacy", "routes/privacy.tsx"),
  route("/terms", "routes/terms.tsx"),
  route("*", "./NotFound.tsx"),
] satisfies RouteConfig;
